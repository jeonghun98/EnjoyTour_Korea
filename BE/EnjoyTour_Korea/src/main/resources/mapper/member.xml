<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.member.model.mapper.MemberMapper">
    
    <resultMap type="memberDto" id="member">
        <result column="user_id" property="userid"/>
        <result column="user_pw" property="userpw"/>
   <!--       <result column="user_name" property="userName"/>
        <result column="user_email" property="userEmail"/>
        <result column="user_phone" property="userPhone"/>-->
    </resultMap>
    
    <resultMap type="memberDto" id="memberDetail" extends="member">
       <!--   <result column="user_id" property="userId"/>
        <result column="user_pw" property="userPw"/>-->
        <result column="user_name" property="username"/>
        <result column="user_email" property="useremail"/>
        <result column="user_phone" property="userphone"/>
    </resultMap>
    
    <select id="idCheck" parameterType="String" resultType="int">
        select count(user_id)
        from enjoytrip.member
        where user_id = #{userid}
    </select>
    
    <select id="pwdFind" parameterType="map" resultMap="memberDetail">
        select user_pw
        from enjoytrip.member
        where user_id = #{userid} and user_email = #{useremail}
    </select>
    
    <insert id="joinMember" parameterType="memberDto">
        insert into enjoytrip.member (user_id, user_pw, user_name, user_email, user_phone)
        values (#{userid}, #{userpw}, #{username}, #{useremail}, #{userphone})
    </insert>
    
    <!-- 로그인 -->
    <select id="loginMember" parameterType="memberDto" resultMap="memberDetail">
        select user_id, user_pw, user_name, user_email, user_phone 
        from enjoytrip.member 
        where user_id = #{userid} and user_pw = #{userpw}
    </select>
    
    <delete id="deleteMember" parameterType="String">
        delete from enjoytrip.member where user_id = #{userid}
    </delete>
    
    <update id="updateMember" parameterType="memberDto">
        update enjoytrip.member 
        set user_pw = #{userpw}, user_email = #{useremail}, user_name = #{username}, user_phone = #{userphone} 
        where user_id = #{userid}
    </update>
    
    <!-- 로그인 회원 정보 호출 -->
    <select id="userInfo" parameterType="String" resultMap="memberDetail">
        select user_id, user_pw, user_name, user_email, user_phone 
        from enjoytrip.member 
        where user_id = #{userid}
    </select>
    
    <!-- refresh 토큰 관련 함수들 -->
    <select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from enjoytrip.member 
		where user_id = #{userid}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update enjoytrip.member 
		set token = #{token}
		where user_id = #{userid}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update enjoytrip.member 
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userid}
	</update>
	
	<!-- SMTP 관련 함수들 -->
	<!-- 이메일로 아이디 찾기 -->
	<select id="findByMemberEmail" parameterType="string" resultType="string">
        select user_id 
        from enjoytrip.member 
        where user_email = #{useremail}
    </select>
    
    <!-- 임시 비밀번호 업데이트 -->
    <update id="updatePassword" parameterType="map">
		update enjoytrip.member 
		set user_pw = #{userpw}
		where user_id = #{userid}
	</update>
    
</mapper>