<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ssafy.plan.model.mapper.TripPlanMapper">

	<resultMap type="TripPlanDto" id="tripplan">
		<result column="plan_no" property="planNo"/>
		<result column="user_id" property="userId"/>
		<result column="plan_title" property="title"/>
		<result column="plan_content" property="content"/>
		<result column="plan_grade" property="grade"/>
		<result column="plan_start_date" property="startDate"/>
		<result column="plan_end_date" property="endDate"/>
		<result column="plan_public" property="planPublic"/>
	</resultMap>
	
	<resultMap type="attractionDto" id="getAttractionDto">
		<result column="content_id" property="contentId"/>
		<result column="content_type_id" property="contenttypeid"/>
		<result column="title" property="title"/>
		<result column="addr1" property="addr1"/>
		<result column="addr2" property="addr2"/>
		<result column="first_image" property="image1"/>
		<result column="first_image2" property="image2"/>
		<result column="latitude" property="latitude"/>
		<result column="longitude" property="longitude"/>
		<result column="overview" property="overview"/>
		<result column="tel" property="tel"/>
	</resultMap>
	
	<insert id="writePlan" parameterType="TripPlanDto">
		insert into plan (plan_title, user_id, plan_content, plan_start_date, plan_end_date, plan_public)
		values (#{title}, #{userId}, #{content}, #{startDate}, #{endDate}, #{planPublic})
		<selectKey resultType="int" keyProperty="planNo" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="writePlanAttraction" parameterType="TripPlanDto">
		insert into plan_attraction (plan_no, content_id)
		values
		<foreach collection="contentIds" item="contentId" separator=" , ">
			(#{planNo}, #{contentId})
		</foreach>
	</insert>
	
	<insert id="authAdd" parameterType="TripPlanDto">
		insert into auth_plan (user_id, plan_no)
		values (#{userId}, #{planNo})
	</insert>
	
	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				where notice_title like concat('%', #{word}, '%')
			</if>
			<if test="key != 'title'">
				where ${key} = #{word}
			</if>
		</if>
	</sql>
	
	<select id="listPlan" parameterType="map" resultMap="tripplan">
		select plan_no, user_id, plan_title, plan_content, plan_start_date, plan_end_date, plan_grade, plan_public
		from plan p
		where plan_public = true
		<include refid="search"></include>
		order by plan_no desc
		limit #{start}, #{spp}
	</select>
	
	<select id="getPlan" parameterType="int" resultMap="getAttractionDto">
		select *
		from attraction_info ai, attraction_description ad
		where ai.content_id = ad.content_id
		and ai.content_id in (select content_id from plan_attraction where plan_no = #{planNo});
	</select>
	
	<select id="mylistPlan" parameterType="string" resultMap="tripplan">
		select distinct p.plan_no, a.user_id, p.plan_title, p.plan_content, p.plan_start_date, p.plan_end_date, p.plan_grade, p.plan_public
		from plan p, auth_plan a
		where a.user_id = #{userId} and (p.user_id = #{userId} or p.plan_no in (select plan_no
											from auth_plan
											where user_id = #{userId}))
		order by plan_no desc
	</select>

	<delete id="deletePlan" parameterType="int">
		delete from plan
		where plan_no = #{planNo}
	</delete>
	
	<delete id="deletePlanAttraction" parameterType="int">
		delete from plan_attraction
		where plan_no = #{planNo}
	</delete>
	
	<delete id="deleteAuthPlan" parameterType="int">
		delete from auth_plan
		where plan_no = #{planNo}
	</delete>
	
	<update id="modifyPlan" parameterType="TripPlanDto">
		update plan
		set plan_title = #{title}, plan_content = #{content}, plan_public = #{planPublic},
		plan_start_date = #{startDate}, plan_end_date = #{endDate}
		where plan_no = #{planNo}
	</update>
	
</mapper>